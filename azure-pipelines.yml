trigger:
  branches:
    include:
      - master

stages:

  - stage: Development
    displayName: Build and push stage
    dependsOn: Lint
    jobs:
      - job: Install
        displayName: Install Dependencies
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: 'Install Node.js'
          - task: Npm@1
            inputs:
              command: install
      - job: Lint
        displayName: Lint Source
        steps:
          - task: CmdLine@2
            inputs:
              script: 'npx eslint --config .eslintrc.yml ./source/*.ts'
      - job: Build
        displayName: Build
        dependsOn: Install
        steps:
          - task: CmdLine@2
            inputs:
              script: 'npx tsc'
          - task: CmdLine@2
            inputs:
              script: 'npx webpack'
      - job: Test
        displayName: Test
        dependsOn: Build
        steps:
          - task: CmdLine@2
            inputs:
              script: 'npx jest'
          # - task: checkVersionNumberIncrement
          #   displayName: Check that the Version Number was Incremented
      # - job: pushToMasterBranch
      #   displayName: Push to the Master branch on the Git Repository
      #   steps:
      #     - task: GitHubRelease@0
      #       inputs:
      #         gitHubConnection: ''
      #         repositoryName: ''
      #         action: create
      #         # TODO: Review options. There are a lot more:
      #         # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/github-release?view=azure-devops
      # - job: publishNPMPackage
      #   displayName: Publish NPM Package
      #   steps:
      #     - task: Npm@1
      #       inputs:
      #         command: publish
      #         publishRegistry: useFeed
      #         publishFeed: ''
      # - job: deployDockerImage
      #   displayName: Deploy Docker Image
      #   steps:
      #     - task: Docker@2
      #       displayName: Build and push an image to container registry
      #       inputs:
      #         command: buildAndPush
      #         repository: $(imageRepository)
      #         dockerfile: $(dockerfilePath)
      #         containerRegistry: $(dockerRegistryServiceConnection)
      #         tags: $(tag)
